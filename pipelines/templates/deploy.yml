parameters:
  current_stage: 'dev'
  dependsOn: 'Build'
  WebAppName: 'tailspin-space-game-web-dev-17587'
  resourceManager: 'sc-all'
  slotBool: false
  slotName: 'rc'
  ResourceGroupName: 'tailspin-space-game-rg'

stages:
- stage: '${{ parameters.current_stage }}'
  condition: or( ne('${{ parameters.current_stage }}', 'prod'), and(eq('${{ parameters.current_stage }}', 'prod'), eq(variables['Build.SourceBranch'], 'release_other'))
  displayName: 'Deploy to the ${{ parameters.current_stage }} environment'
  dependsOn: '${{ parameters.dependsOn }}'
  jobs:
  - deployment: '${{ parameters.current_stage }}'
    pool:
      name: Hosted VS2017
    environment: '${{ parameters.current_stage }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - ${{ if ne(parameters.current_stage, 'prod')}}:
            - download: current
              artifact: drop
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deploy: website'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: '${{ parameters.resourceManager }}'
                appType: 'webApp'
                webAppName: '${{ parameters.WebAppName }}'
                packageForLinux: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
                enableCustomDeployment: true
                DeploymentType: 'webDeploy'
                RemoveAdditionalFilesFlag: true
                ${{ if eq(parameters.slotBool, 'true') }}:
                  ResourceGroupName: '${{ parameters.ResourceGroupName }}'
                  deployToSlotOrASE: '${{ parameters.slotBool }}'
                  SlotName: '${{ parameters.current_stage }}'
          - ${{ if eq(parameters.current_stage, 'prod')}}:
            - task: AzureAppServiceManage@0
              displayName: 'Azure App Service - Swap RC to Production'
              inputs:
                azureSubscription: ${{ parameters.resourceManager}}
                Action: 'Swap Slots'
                WebAppName: ${{ parameters.WebAppName}}
                ResourceGroupName: '${{ parameters.ResourceGroupName }}'
                SourceSlot: 'RC'