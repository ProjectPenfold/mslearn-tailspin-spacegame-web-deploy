#mslearn-tailspin-spacegame-web-deploy

trigger:
  branches:
    include:
    - 'release'
  paths:
    include:
      - templates/*

variables:
  - name: buildConfiguration
    value: 'Release'
  - name: releaseBranchName
    value: 'release'
  - template: "templates/vars.yml"

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-16.04'
      demands:
        - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.100'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: Npm@1
      displayName: 'Run npm install'
      inputs:
        verbose: false

    - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
      displayName: 'Compile Sass assets'

    - task: gulp@1
      displayName: 'Run gulp tasks'

    - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

# Deployments start here, using templates

#- template: templates/deploy.yml
#  parameters:
#    current_stage: 'dev'
#    dependsOn: 'Build'
#    WebAppName: '$(WebAppNameDev)'
#    resourceManager: 'sc-all'

- template: templates/deploy.yml
  parameters:
    current_stage: 'test'
    dependsOn: 'Build'
    WebAppName: '$(WebAppNameTest)'
    resourceManager: '$(rmTest)'

- template: templates/deploy.yml
  parameters:
    current_stage: 'rc'
    dependsOn: 'test'
    WebAppName: '$(WebAppNameProd)'
    resourceManager: 'sc-all'
    slotBool: true

- template: templates/deploy.yml
  parameters:
    current_stage: 'prod'
    dependsOn: 'rc'
    WebAppName: '$(WebAppNameProd)'
    resourceManager: 'sc-all'
    slotBool: true